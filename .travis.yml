addons:
  apt:
    packages:
      - lib32stdc++6

env:
  global:
    - FLUTTER_CHANNEL=stable

cache:
  bundler: true
  cocoapods: true
  directories:
    - $HOME/.pub-cache
    - $HOME/.rvm/

if: type = pull_request AND branch = main

jobs:
  include:
    - stage: test
      name: "Unit Tests"
      install:
        - git clone https://github.com/flutter/flutter.git -b $FLUTTER_CHANNEL
        - export PATH="$PATH:`pwd`/flutter/bin/cache/dart-sdk/bin"
        - export PATH="$PATH:`pwd`/flutter/bin"
        - flutter doctor -v
        - flutter packages get
        - flutter pub run build_runner build --delete-conflicting-outputs
      script:
        - flutter analyze --no-pub --no-current-package lib/ test/
        - flutter test --coverage --coverage-path=lcov.info
      after_success:
        - bash <(curl -s https://codecov.io/bash)

    - stage: deploy
      # Android
      language: android
      dist: trusty
      android:
        components:
          - tools
          - platform-tools
          - android-29
          - build-tools-28.0.3
      before_install:
        - yes | sdkmanager "platforms;android-28"
      install:
        # Fastlane
        - rvm install 2.6.0 && rvm use 2.6.0
        - gem install bundler
        - cd android && bundle install && cd ..

        # Flutter
        - git clone https://github.com/flutter/flutter.git -b $FLUTTER_CHANNEL
        - export PATH="$PATH:`pwd`/flutter/bin/cache/dart-sdk/bin"
        - export PATH="$PATH:`pwd`/flutter/bin"
        - flutter doctor -v
      script:
        - mkdir keys
        - echo "$ANDROID_KEY_PROPERTIES_ENCODED" | base64 --decode > android/key.properties
        - echo "$GOOGLE_SERVICES_JSON_ENCODED" | base64 --decode > android/app/google-services.json
        - echo "$GOOGLE_PLAY_UPLOAD_KEY_ENCODED" | base64 --decode > keys/upload.jks
        - echo "$GOOGLE_CLOUD_API_KEY_ENCODED" | base64 --decode > keys/google-cloud-api.json
        - flutter clean
        - flutter packages get
        - flutter pub run build_runner build --delete-conflicting-outputs
        - flutter build appbundle --dart-define=GIV_API_BASE_URL="$GIV_API_BASE_URL" --dart-define=GIV_FACEBOOK_APP_ID="$GIV_FACEBOOK_APP_ID" --dart-define=GIV_FACEBOOK_LOGIN_PROTOCOL_SCHEME="$GIV_FACEBOOK_LOGIN_PROTOCOL_SCHEME" --dart-define=GIV_FACEBOOK_CLIENT_TOKEN="$GIV_FACEBOOK_CLIENT_TOKEN" --dart-define=GIV_GOOGLE_LOGIN_PROTOCOL_SCHEME="$GIV_GOOGLE_LOGIN_PROTOCOL_SCHEME"
        - cd android
        - bundle exec fastlane beta --verbose

    - # continue to use `deploy` stage
      # iOS
      language: objective-c
      os: osx
      osx_image: xcode12
      install:
        # Fastlane
        - rvm install 2.6.0 && rvm use 2.6.0
        - gem install bundler
        - cd ios && bundle install && cd ..

        # Cocoapods
        - gem install cocoapods

        # Flutter
        - git clone https://github.com/flutter/flutter.git -b $FLUTTER_CHANNEL
        - export PATH="$PATH:`pwd`/flutter/bin/cache/dart-sdk/bin"
        - export PATH="$PATH:`pwd`/flutter/bin"
        - flutter doctor -v
      script:
        - echo "$GOOGLE_SERVICES_PLIST_ENCODED" | base64 --decode > ios/Runner/GoogleService-Info.plist
        - flutter clean
        - flutter packages get
        - flutter pub run build_runner build --delete-conflicting-outputs
        - flutter build ios --release --no-codesign --dart-define=GIV_API_BASE_URL="$GIV_API_BASE_URL" --dart-define=GIV_FACEBOOK_APP_ID="$GIV_FACEBOOK_APP_ID" --dart-define=GIV_FACEBOOK_LOGIN_PROTOCOL_SCHEME="$GIV_FACEBOOK_LOGIN_PROTOCOL_SCHEME" --dart-define=GIV_FACEBOOK_CLIENT_TOKEN="$GIV_FACEBOOK_CLIENT_TOKEN" --dart-define=GIV_GOOGLE_LOGIN_PROTOCOL_SCHEME="$GIV_GOOGLE_LOGIN_PROTOCOL_SCHEME"
        - cd ios
        - echo "machine github.com login $GITHUB_API_TOKEN" >> ~/.netrc
        - bundle exec fastlane beta --verbose
